{"ast":null,"code":"\"use strict\";\n\nconst start = async () => {\n  document.querySelector(\".footer > p:nth-child(1)\").style.visibility = \"hidden\";\n  let now = new Date();\n  let algoValue = Number(document.querySelector(\".algo-menu\").value);\n  let speedValue = Number(document.querySelector(\".speed-menu\").value);\n  if (speedValue === 0) {\n    speedValue = 1;\n  }\n  if (algoValue === 0) {\n    alert(\"No Algorithm Selected\");\n    return;\n  }\n  let algorithm = new sort() - algorithms(speedValue);\n  if (algoValue === 1) await algorithm.BubbleSort();\n  if (algoValue === 2) await algorithm.SelectionSort();\n  if (algoValue === 3) await algorithm.InsertionSort();\n  if (algoValue === 4) await algorithm.MergeSort();\n  if (algoValue === 5) await algorithm.QuickSort();\n  let now1 = new Date();\n  document.getElementById('Ttime').innerHTML = (now1 - now) / 1000;\n  // document.querySelector(\".footer > p:nth-child(2)\").style.visibility = \"visible\";\n};\nvar i = 0;\nlet input;\nconst RenderScreen = async () => {\n  let algoValue = Number(document.querySelector(\".algo-menu\").value);\n  await RenderList();\n};\n_c = RenderScreen;\nconst RenderInput = async () => {\n  input = String(document.querySelector(\".input\").value);\n  console.log(\"input in app.js is \", input);\n  await RenderList();\n};\n_c2 = RenderInput;\nconst RenderList = async () => {\n  let sizeValue = Number(document.querySelector(\".size-menu\").value);\n  // if(i>0){\n  //   input = prompt(\"Do you want to manually input the array? Answer - Y/N\");\n  // }\n  // i++;\n  await clearScreen();\n  //await RenderInput();\n\n  let list = await randomList(sizeValue);\n  const arrayNode = document.querySelector(\".array\");\n  console.log(\"array Node in app.js is \", arrayNode);\n  console.log(\"list in app.js is \", list);\n  for (const element of list) {\n    const node = document.createElement(\"div\");\n    node.className = \"cell\";\n    node.setAttribute(\"value\", String(element));\n    node.style.height = `${3.8 * element}px`;\n    arrayNode.appendChild(node);\n  }\n};\n_c3 = RenderList;\nconst RenderArray = async sorted => {\n  let sizeValue = Number(document.querySelector(\".size-menu\").value);\n  await clearScreen();\n  let list = await randomList(sizeValue);\n  if (sorted) list.sort((a, b) => a - b);\n  const arrayNode = document.querySelector(\".array\");\n  const divnode = document.createElement(\"div\");\n  divnode.className = \"s-array\";\n  for (const element of list) {\n    const dnode = document.createElement(\"div\");\n    dnode.className = \"s-cell\";\n    dnode.innerText = element;\n    divnode.appendChild(dnode);\n  }\n  arrayNode.appendChild(divnode);\n};\n_c4 = RenderArray;\nconst randomList = async Length => {\n  let list = new Array();\n  let lowerBound = 1;\n  let upperBound = 100;\n\n  // here is where bakliwaal has taken input using a prompt : but we are not going to use it, we will use a input field : to take input from user.\n\n  if (input == \"Y\") {\n    // for (let counter = 0; counter < Length; ++counter) {\n    //   let randomNumber = prompt(\"Enter the no.\");\n    //   list.push(parseInt(randomNumber));\n    // }\n    let inpBox = document.querySelector(\".inputBox\");\n    let inputReceived = inpBox.value;\n    console.log(\"input received is \", inputReceived);\n    list = inputReceived.split(',');\n    console.log(\"list in app.js is \", list);\n    console.log(\"Length in app.js is \", Length, \" list.length is \", list.length);\n    Length = list.length;\n    console.log(\"Length in app.js is \", Length, \" list.length is \", list.length);\n  } else {\n    for (let counter = 0; counter < Length; ++counter) {\n      let randomNumber = Math.floor(Math.random() * (upperBound - lowerBound + 1) + lowerBound);\n      list.push(parseInt(randomNumber));\n    }\n  }\n\n  // for (let counter = 0; counter < Length; ++counter) {\n  //   let randomNumber = Math.floor(\n  //     Math.random() * (upperBound - lowerBound + 1) + lowerBound\n  //   );\n  //   list.push(parseInt(randomNumber));\n  // }\n\n  return list;\n};\nconst clearScreen = async () => {\n  document.querySelector(\".array\").innerHTML = \"\";\n};\nconst response = () => {\n  let Navbar = document.querySelector(\".navbar\");\n  if (Navbar.className === \"navbar\") {\n    Navbar.className += \" responsive\";\n  } else {\n    Navbar.className = \"navbar\";\n  }\n};\ndocument.querySelector(\".icon\").addEventListener(\"click\", response);\ndocument.querySelector(\".start\").addEventListener(\"click\", start);\ndocument.querySelector(\".size-menu\").addEventListener(\"change\", RenderList);\ndocument.querySelector(\".algo-menu\").addEventListener(\"change\", RenderScreen);\ndocument.querySelector(\".input\").addEventListener(\"change\", RenderInput);\nwindow.onload = RenderScreen;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"RenderScreen\");\n$RefreshReg$(_c2, \"RenderInput\");\n$RefreshReg$(_c3, \"RenderList\");\n$RefreshReg$(_c4, \"RenderArray\");","map":{"version":3,"names":["start","document","querySelector","style","visibility","now","Date","algoValue","Number","value","speedValue","alert","algorithm","sort","algorithms","BubbleSort","SelectionSort","InsertionSort","MergeSort","QuickSort","now1","getElementById","innerHTML","i","input","RenderScreen","RenderList","_c","RenderInput","String","console","log","_c2","sizeValue","clearScreen","list","randomList","arrayNode","element","node","createElement","className","setAttribute","height","appendChild","_c3","RenderArray","sorted","a","b","divnode","dnode","innerText","_c4","Length","Array","lowerBound","upperBound","inpBox","inputReceived","split","length","counter","randomNumber","Math","floor","random","push","parseInt","response","Navbar","addEventListener","window","onload","$RefreshReg$"],"sources":["/home/pendulum/sorting/src/App.js"],"sourcesContent":["\"use strict\";\n\nconst start = async () => {\n  document.querySelector(\".footer > p:nth-child(1)\").style.visibility = \"hidden\";\n  let now = new Date();\n  let algoValue = Number(document.querySelector(\".algo-menu\").value);\n  let speedValue = Number(document.querySelector(\".speed-menu\").value);\n\n  if (speedValue === 0) {\n    speedValue = 1;\n  }\n  if (algoValue === 0) {\n    alert(\"No Algorithm Selected\");\n    return;\n  }\n\n  let algorithm = new sort-algorithms(speedValue);\n  if (algoValue === 1) await algorithm.BubbleSort();\n  if (algoValue === 2) await algorithm.SelectionSort();\n  if (algoValue === 3) await algorithm.InsertionSort();\n  if (algoValue === 4) await algorithm.MergeSort();\n  if (algoValue === 5) await algorithm.QuickSort();\n  let now1 = new Date();\n  document.getElementById('Ttime').innerHTML = (now1 - now) / 1000;\n  // document.querySelector(\".footer > p:nth-child(2)\").style.visibility = \"visible\";\n};\nvar i=0;\nlet input;\n\nconst RenderScreen = async () => {\n  let algoValue = Number(document.querySelector(\".algo-menu\").value);\n  await RenderList();\n};\n\nconst RenderInput = async () => {\n  input = String(document.querySelector(\".input\").value);\n  console.log(\"input in app.js is \",input);\n  await RenderList();\n};\n\nconst RenderList = async () => {\n  let sizeValue = Number(document.querySelector(\".size-menu\").value);\n  // if(i>0){\n  //   input = prompt(\"Do you want to manually input the array? Answer - Y/N\");\n  // }\n  // i++;\n  await clearScreen();\n  //await RenderInput();\n  \n  let list = await randomList(sizeValue);\n  const arrayNode = document.querySelector(\".array\");\n  console.log(\"array Node in app.js is \",arrayNode);\n  console.log(\"list in app.js is \",list);\n  for (const element of list) {\n    const node = document.createElement(\"div\");\n    node.className = \"cell\";\n    node.setAttribute(\"value\", String(element));\n    node.style.height = `${3.8 * element}px`;\n    arrayNode.appendChild(node);\n  }\n};\n\nconst RenderArray = async (sorted) => {\n  let sizeValue = Number(document.querySelector(\".size-menu\").value);\n  await clearScreen();\n\n  let list = await randomList(sizeValue);\n  if (sorted) list.sort((a, b) => a - b);\n\n  const arrayNode = document.querySelector(\".array\");\n  const divnode = document.createElement(\"div\");\n  divnode.className = \"s-array\";\n\n  for (const element of list) {\n    const dnode = document.createElement(\"div\");\n    dnode.className = \"s-cell\";\n    dnode.innerText = element;\n    divnode.appendChild(dnode);\n  }\n  arrayNode.appendChild(divnode);\n};\n\nconst randomList = async (Length) => {\n  let list = new Array();\n  let lowerBound = 1;\n  let upperBound = 100;\n  \n// here is where bakliwaal has taken input using a prompt : but we are not going to use it, we will use a input field : to take input from user.\n\n  if (input == \"Y\") {\n    // for (let counter = 0; counter < Length; ++counter) {\n    //   let randomNumber = prompt(\"Enter the no.\");\n    //   list.push(parseInt(randomNumber));\n    // }\n    let inpBox = document.querySelector(\".inputBox\");\n    let inputReceived = inpBox.value;\n\n    console.log(\"input received is \",inputReceived);\n\n    list = inputReceived.split(',');\n    console.log(\"list in app.js is \",list);\n    console.log(\"Length in app.js is \",Length, \" list.length is \",list.length);\n    Length = list.length;\n    console.log(\"Length in app.js is \",Length, \" list.length is \",list.length);\n  }\n  else{\n    for (let counter = 0; counter < Length; ++counter) {\n      let randomNumber = Math.floor(\n        Math.random() * (upperBound - lowerBound + 1) + lowerBound\n      );\n      list.push(parseInt(randomNumber));\n    }\n  }\n\n  // for (let counter = 0; counter < Length; ++counter) {\n  //   let randomNumber = Math.floor(\n  //     Math.random() * (upperBound - lowerBound + 1) + lowerBound\n  //   );\n  //   list.push(parseInt(randomNumber));\n  // }\n\n  \n  return list;\n};\n\nconst clearScreen = async () => {\n  document.querySelector(\".array\").innerHTML = \"\";\n};\n\nconst response = () => {\n  let Navbar = document.querySelector(\".navbar\");\n  if (Navbar.className === \"navbar\") {\n    Navbar.className += \" responsive\";\n  } else {\n    Navbar.className = \"navbar\";\n  }\n};\n\ndocument.querySelector(\".icon\").addEventListener(\"click\", response);\ndocument.querySelector(\".start\").addEventListener(\"click\", start);\ndocument.querySelector(\".size-menu\").addEventListener(\"change\", RenderList);\ndocument.querySelector(\".algo-menu\").addEventListener(\"change\", RenderScreen);\ndocument.querySelector(\".input\").addEventListener(\"change\", RenderInput);\nwindow.onload = RenderScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}